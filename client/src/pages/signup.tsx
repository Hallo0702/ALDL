import { NextPage } from 'next';
import { useEffect, useState } from 'react';
import axios from 'axios';
import Head from 'next/head';
import FormInput from '../components/common/FormInput';
import Button from '../components/common/Button';

const Signup: NextPage = ({}) => {
  const [inputValue, setInputValue] = useState('');
  useEffect(() => {
    const fetch = async () => {
      try {
        const res = await axios.get(
          'https://aldl.kro.kr/api/emailduplicate?email=asfasd'
        );
        console.log(res);
      } catch (err) {
        if (axios.isAxiosError(err)) {
          console.log(err.response?.data);
        }
      }
    };
    fetch();
  }, []);
  return (
    <>
      <Head>
        <title>회원가입</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/images/logo.png" />
      </Head>
      <main>
        <div className="text-center font-custom font-bold text-lg text-black mb-12">
          회원가입
        </div>
        <form className="flex flex-col justify-center items-center">
          {/* todo: 이메일 인증 */}
          <FormInput
            label="이메일"
            id="email"
            isError
            errMsg="* 올바른 이메일 형식을 확인하세요."
            value={inputValue}
            onChange={(e) => {
              setInputValue(e.target.value);
            }}
          ></FormInput>
          <FormInput
            label="비밀번호"
            id="password"
            type="password"
            value={inputValue}
            onChange={(e) => {
              setInputValue(e.target.value);
            }}
          ></FormInput>
          <FormInput
            label="비밀번호 확인"
            id="passwordConfirm"
            type="password"
            isError
            errMsg="* 비밀번호를 다시 확인해주세요."
            value={inputValue}
            onChange={(e) => {
              setInputValue(e.target.value);
            }}
          ></FormInput>
          <FormInput label="이름" id="name"></FormInput>
          <FormInput
            label="닉네임"
            id="nickname"
            isError
            errMsg="* 중복된 닉네임입니다."
            value={inputValue}
            onChange={(e) => {
              setInputValue(e.target.value);
            }}
          ></FormInput>
        </form>

        <div className="flex justify-center content-center">
          <Button label="취소" btnType="normal" btnSize="medium"></Button>
          <Button label="확인" btnType="active" btnSize="medium"></Button>
        </div>
      </main>
    </>
  );
};

export default Signup;
